import { Meteor } from 'meteor/meteor';
export const iframeEntrypointText = atob('Y29uc3Qgb3JpZ2luYWxGZXRjaCA9IGdsb2JhbFRoaXMuZmV0Y2g7CmNvbnN0IGZldGNoUHJvdG9jb2xzID0gbmV3IE1hcCgpOwpnbG9iYWxUaGlzLmZldGNoID0gYXN5bmMgKHJlcSwgb3B0cyk9PnsKICAgIGNvbnN0IHVybCA9IG5ldyBVUkwocmVxIGluc3RhbmNlb2YgUmVxdWVzdCA/IHJlcS51cmwgOiByZXEudG9TdHJpbmcoKSk7CiAgICBjb25zb2xlLmRlYnVnKCdmZXRjaCB0bycsIHVybC5wcm90b2NvbCk7CiAgICBjb25zdCBoYW5kbGVyID0gZmV0Y2hQcm90b2NvbHMuZ2V0KHVybC5wcm90b2NvbCkgfHwgb3JpZ2luYWxGZXRjaDsKICAgIHJldHVybiBhd2FpdCBoYW5kbGVyKHJlcSwgb3B0cyk7Cn07Ci8vQHRzLWlnbm9yZQpnbG9iYWxUaGlzLkRpc3RBcHAgPSBjbGFzcyBEaXN0QXBwIHsKICAgIHN0YXRpYyBhc3luYyBjb25uZWN0KCkgewogICAgICAgIGNvbnN0IHBvcnQgPSBhd2FpdCByZWNlaXZlTWVzc2FnZVBvcnQoKTsKICAgICAgICByZXR1cm4gbmV3IERpc3RBcHAocG9ydCk7CiAgICB9CiAgICBoYW5kbGVNZXNzYWdlKGV2dCkgewogICAgICAgIGNvbnN0IGVudGl0eSA9IGV2dC5kYXRhOwogICAgICAgIGlmIChlbnRpdHkua2luZCA9PSAnRmV0Y2hSZXNwb25zZScpIHsKICAgICAgICAgICAgY29uc3QgcGFpciA9IHRoaXMucHJvbWlzZXMuZ2V0KGVudGl0eS5vcmlnSWQpOwogICAgICAgICAgICBpZiAocGFpcikgewogICAgICAgICAgICAgICAgdGhpcy5wcm9taXNlcy5kZWxldGUoZW50aXR5Lm9yaWdJZCk7CiAgICAgICAgICAgICAgICBwYWlyWzBdKGVudGl0eSk7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKGVudGl0eS5raW5kID09ICdGZXRjaEVycm9yJykgewogICAgICAgICAgICBjb25zdCBwYWlyMSA9IHRoaXMucHJvbWlzZXMuZ2V0KGVudGl0eS5vcmlnSWQpOwogICAgICAgICAgICBpZiAocGFpcjEpIHsKICAgICAgICAgICAgICAgIHRoaXMucHJvbWlzZXMuZGVsZXRlKGVudGl0eS5vcmlnSWQpOwogICAgICAgICAgICAgICAgcGFpcjFbMV0obmV3IEVycm9yKGVudGl0eS5zcGVjLm1lc3NhZ2UpKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBjb25zb2xlLndhcm4oJ1RPRE86IERpc3RBcHAgcmVjZWl2ZWQ6JywgZXZ0LmRhdGEpOwogICAgfQogICAgYXN5bmMgZmV0Y2gocmVxLCBvcHRzKSB7CiAgICAgICAgaWYgKHR5cGVvZiByZXEgPT0gJ3N0cmluZycpIHsKICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuaGFuZGxlRmV0Y2goewogICAgICAgICAgICAgICAgbWV0aG9kOiBvcHRzPy5tZXRob2QgfHwgJ0dFVCcsCiAgICAgICAgICAgICAgICB1cmw6IHJlcSwKICAgICAgICAgICAgICAgIGhlYWRlcnM6IG5ldyBIZWFkZXJzKG9wdHM/LmhlYWRlcnMpLAogICAgICAgICAgICAgICAgYm9keTogb3B0cz8uYm9keSAhPSBudWxsID8gYXdhaXQgbmV3IFJlc3BvbnNlKG9wdHMuYm9keSkudGV4dCgpIDogbnVsbAogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgICAgY29uc3QgcmVxdWVzdCA9IG5ldyBSZXF1ZXN0KHJlcSwgb3B0cyk7CiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuaGFuZGxlRmV0Y2goewogICAgICAgICAgICBtZXRob2Q6IHJlcXVlc3QubWV0aG9kLAogICAgICAgICAgICB1cmw6IHJlcXVlc3QudXJsLAogICAgICAgICAgICBoZWFkZXJzOiByZXF1ZXN0LmhlYWRlcnMsCiAgICAgICAgICAgIGJvZHk6IGF3YWl0IHJlcXVlc3QudGV4dCgpIHx8IG51bGwKICAgICAgICB9KTsKICAgIH0KICAgIGFzeW5jIGhhbmRsZUZldGNoKHJlcXVlc3QpIHsKICAgICAgICBjb25zdCByZXNwUGF5bG9hZCA9IGF3YWl0IHRoaXMuc2VuZFJwY0ZvclJlc3VsdCh7CiAgICAgICAgICAgIGtpbmQ6ICdGZXRjaFJlcXVlc3QnLAogICAgICAgICAgICBpZDogLTEsCiAgICAgICAgICAgIHNwZWM6IHsKICAgICAgICAgICAgICAgIHVybDogcmVxdWVzdC51cmwsCiAgICAgICAgICAgICAgICBtZXRob2Q6IHJlcXVlc3QubWV0aG9kLAogICAgICAgICAgICAgICAgaGVhZGVyczogQXJyYXkuZnJvbShyZXF1ZXN0LmhlYWRlcnMpLAogICAgICAgICAgICAgICAgYm9keTogcmVxdWVzdC5ib2R5ID8/IHVuZGVmaW5lZAogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgaWYgKHJlc3BQYXlsb2FkLnNwZWMuYm9keVN0cmVhbSAhPSBudWxsKSB0aHJvdyBuZXcgRXJyb3IoYFRPRE86IHN0cmVhbWApOwogICAgICAgIHJldHVybiBuZXcgUmVzcG9uc2UocmVzcFBheWxvYWQuc3BlYy5ib2R5LCB7CiAgICAgICAgICAgIHN0YXR1czogcmVzcFBheWxvYWQuc3BlYy5zdGF0dXMsCiAgICAgICAgICAgIGhlYWRlcnM6IG5ldyBIZWFkZXJzKHJlc3BQYXlsb2FkLnNwZWMuaGVhZGVycyA/PyBbXSkKICAgICAgICB9KTsKICAgIH0KICAgIHVzZVZ1ZVN0YXRlKGtleSwgaW5pdGlhbCkgewogICAgICAgIGNvbnNvbGUubG9nKCJUT0RPOiB1c2VWdWVTdGF0ZSIsIGtleSwgaW5pdGlhbCk7CiAgICAgICAgcmV0dXJuIGluaXRpYWw7CiAgICB9CiAgICByZXBvcnRSZWFkeSgpIHsKICAgICAgICB0aGlzLnNlbmRScGMoewogICAgICAgICAgICBraW5kOiAnTGlmZWN5Y2xlJywKICAgICAgICAgICAgc3BlYzogewogICAgICAgICAgICAgICAgc3RhZ2U6ICdyZWFkeScKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfQogICAgbGF1bmNoSW50ZW50KGludGVudCkgewogICAgICAgIHRoaXMuc2VuZFJwYyh7CiAgICAgICAgICAgIGtpbmQ6ICdMYXVuY2hJbnRlbnQnLAogICAgICAgICAgICBzcGVjOiBpbnRlbnQKICAgICAgICB9KTsKICAgIH0KICAgIHNlbmRScGMoZGF0YSkgewogICAgICAgIHRoaXMucG9ydC5wb3N0TWVzc2FnZShkYXRhKTsKICAgIH0KICAgIC8vIG9wZW5SZXN1bHRTdHJlYW08VHJlc3AgZXh0ZW5kcyBQcm90b2NvbEVudGl0eT4oZXhwZWN0S2luZHM6IEFycmF5PHN0cmluZz4pIHt9CiAgICBzZW5kUnBjRm9yUmVzdWx0KGRhdGEpIHsKICAgICAgICBjb25zdCBwcm9taXNlTnVtID0gdGhpcy5uZXh0UHJvbWlzZSsrOwogICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgob2ssIGZhaWwpPT57CiAgICAgICAgICAgIHRoaXMuc2VuZFJwYyh7CiAgICAgICAgICAgICAgICAuLi5kYXRhLAogICAgICAgICAgICAgICAgaWQ6IHByb21pc2VOdW0KICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHRoaXMucHJvbWlzZXMuc2V0KHByb21pc2VOdW0sIFsKICAgICAgICAgICAgICAgICh2YWx1ZSk9Pm9rKHZhbHVlKSwKICAgICAgICAgICAgICAgIChlcnJvcik9PmZhaWwoZXJyb3IpLCAKICAgICAgICAgICAgXSk7CiAgICAgICAgfSk7CiAgICAvLyBkaXN0LWFwcDovcHJvdG9jb2xlbmRwb2ludHMvaHR0cC9pbnZva2UKICAgIH0KICAgIGNvbnN0cnVjdG9yKHBvcnQpewogICAgICAgIHRoaXMucG9ydCA9IHBvcnQ7CiAgICAgICAgdGhpcy5uZXh0UHJvbWlzZSA9IDA7CiAgICAgICAgdGhpcy5wcm9taXNlcyA9IG5ldyBNYXAoKTsKICAgICAgICAvLyBIb29rIHVwIHNvbWUgaGFuZGxlcnM6CiAgICAgICAgcG9ydC5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIiwgKGV2dCk9PnRoaXMuaGFuZGxlTWVzc2FnZShldnQpKTsKICAgICAgICBwb3J0LnN0YXJ0KCk7CiAgICAgICAgZmV0Y2hQcm90b2NvbHMuc2V0KCdkaXN0LWFwcDonLCAoaW5wdXQsIGluaXQpPT50aGlzLmZldGNoKGlucHV0LCBpbml0KSk7CiAgICB9Cn07CmZ1bmN0aW9uIHJlY2VpdmVNZXNzYWdlUG9ydCgpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgob2ssIHJlamVjdCk9PnsKICAgICAgICBmdW5jdGlvbiBoYW5kbGVFdmVudChldmVudCkgewogICAgICAgICAgICBpZiAoZXZlbnQub3JpZ2luICE9PSAie09SSUdJTn0iKSByZXR1cm47CiAgICAgICAgICAgIGlmICh0eXBlb2YgZXZlbnQuZGF0YSAhPT0gJ29iamVjdCcgfHwgIWV2ZW50LmRhdGEpIHJldHVybjsKICAgICAgICAgICAgaWYgKHR5cGVvZiBldmVudC5kYXRhLnByb3RvY29sICE9PSAnc3RyaW5nJykgcmV0dXJuOwogICAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsIGhhbmRsZUV2ZW50KTsKICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLCAoKT0+ewogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcigiUmVjZWl2ZWQgYSBzZWNvbmQgcHJvdG9jb2wgaW5pdGlhdGlvbj8/IFJlbG9hZGluZyIpOwogICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBlbnRpdHkgPSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6ICdMaWZlY3ljbGUnLAogICAgICAgICAgICAgICAgICAgICAgICBzcGVjOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFnZTogJ3JlY3ljbGUnCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgIGV2ZW50LnBvcnRzPy5tYXAoKHBvcnQpPT5wb3J0LnBvc3RNZXNzYWdlKGVudGl0eSkpID8/IFtdOwogICAgICAgICAgICAgICAgICAgIGlmIChwb3J0KSByZWplY3QobmV3IEVycm9yKCJSZWNlaXZlZCBwcm90b2NvbCBwYWNrZXQgd2l0aG91dCBhIHBvcnQiKSk7CiAgICAgICAgICAgICAgICB9IGZpbmFsbHl7CiAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LCBmYWxzZSk7CiAgICAgICAgICAgIGlmIChldmVudC5kYXRhLnByb3RvY29sICE9PSAncHJvdG9jb2wuZGlzdC5hcHAvdjFhbHBoYTEnKSByZWplY3QobmV3IEVycm9yKCJSZWNlaXZlZCB1bmV4cGVjdGVkIHByb3RvY29sICIgKyBldmVudC5kYXRhLnByb3RvY29sKSk7CiAgICAgICAgICAgIGNvbnN0IFtwb3J0XSA9IGV2ZW50LnBvcnRzID8/IFtdOwogICAgICAgICAgICBpZiAoIXBvcnQpIHJlamVjdChuZXcgRXJyb3IoIlJlY2VpdmVkIHByb3RvY29sIHBhY2tldCB3aXRob3V0IGEgcG9ydCIpKTsKICAgICAgICAgICAgb2socG9ydCk7CiAgICAgICAgfQogICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIiwgaGFuZGxlRXZlbnQsIGZhbHNlKTsKICAgIH0pOwp9CmV4cG9ydCB7IH07CgoKLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG1wLnVWOFJDVEFOdUEubWFw');
export const iframeEntrypointBlob = new Blob([
  iframeEntrypointText.replace('{ORIGIN}', new URL(Meteor.absoluteUrl()).origin),
], {type: 'text/javascript'});
export const iframeEntrypointUrl = URL.createObjectURL(iframeEntrypointBlob);
