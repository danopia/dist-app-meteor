export const iframeEntrypoint = atob('Y29uc3Qgb3JpZ2luYWxGZXRjaCA9IGdsb2JhbFRoaXMuZmV0Y2g7CmNvbnN0IGZldGNoUHJvdG9jb2xzID0gbmV3IE1hcCgpOwpnbG9iYWxUaGlzLmZldGNoID0gYXN5bmMgKHJlcSwgb3B0cykgPT4gewogICAgY29uc3QgdXJsID0gbmV3IFVSTChyZXEgaW5zdGFuY2VvZiBSZXF1ZXN0ID8gcmVxLnVybCA6IHJlcS50b1N0cmluZygpKTsKICAgIGNvbnNvbGUuZGVidWcoJ2ZldGNoIHRvJywgdXJsLnByb3RvY29sKTsKICAgIGNvbnN0IGhhbmRsZXIgPSBmZXRjaFByb3RvY29scy5nZXQodXJsLnByb3RvY29sKSB8fCBvcmlnaW5hbEZldGNoOwogICAgcmV0dXJuIGF3YWl0IGhhbmRsZXIocmVxLCBvcHRzKTsKfTsKZ2xvYmFsVGhpcy5EaXN0QXBwID0gY2xhc3MgRGlzdEFwcCB7CiAgICBjb25zdHJ1Y3Rvcihwb3J0KSB7CiAgICAgICAgdGhpcy5wb3J0ID0gcG9ydDsKICAgICAgICB0aGlzLm5leHRQcm9taXNlID0gMDsKICAgICAgICB0aGlzLnByb21pc2VzID0gbmV3IE1hcCgpOwogICAgICAgIC8vIEhvb2sgdXAgc29tZSBoYW5kbGVyczoKICAgICAgICBwb3J0LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLCBldnQgPT4gdGhpcwogICAgICAgICAgICAuaGFuZGxlTWVzc2FnZShldnQpKTsKICAgICAgICBwb3J0LnN0YXJ0KCk7CiAgICAgICAgZmV0Y2hQcm90b2NvbHMuc2V0KCdkaXN0LWFwcDonLCAoaW5wdXQsIGluaXQpID0+IHRoaXMKICAgICAgICAgICAgLmhhbmRsZUZldGNoKG5ldyBSZXF1ZXN0KGlucHV0LCBpbml0KSkpOwogICAgfQogICAgc3RhdGljIGFzeW5jIGNvbm5lY3QoKSB7CiAgICAgICAgY29uc3QgcG9ydCA9IGF3YWl0IHJlY2VpdmVNZXNzYWdlUG9ydCgpOwogICAgICAgIHJldHVybiBuZXcgRGlzdEFwcChwb3J0KTsKICAgIH0KICAgIGhhbmRsZU1lc3NhZ2UoZXZ0KSB7CiAgICAgICAgaWYgKGV2dC5kYXRhLnJwYyA9PSAncmVzcG9uZCcpIHsKICAgICAgICAgICAgY29uc3QgcGFpciA9IHRoaXMucHJvbWlzZXMuZ2V0KGV2dC5kYXRhLm9yaWdJZCk7CiAgICAgICAgICAgIGlmIChwYWlyKSB7CiAgICAgICAgICAgICAgICB0aGlzLnByb21pc2VzLmRlbGV0ZShldnQuZGF0YS5vcmlnSWQpOwogICAgICAgICAgICAgICAgaWYgKGV2dC5kYXRhLmVycm9yKSB7CiAgICAgICAgICAgICAgICAgICAgcGFpclsxXShuZXcgRXJyb3IoZXZ0LmRhdGEuZXJyb3IpKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgIHBhaXJbMF0oZXZ0LmRhdGEuZGF0YSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgY29uc29sZS53YXJuKCdUT0RPOiBEaXN0QXBwIHJlY2VpdmVkOicsIGV2dC5kYXRhKTsKICAgIH0KICAgIGFzeW5jIGhhbmRsZUZldGNoKHJlcXVlc3QpIHsKICAgICAgICBjb25zdCBwYXlsb2FkID0gewogICAgICAgICAgICB1cmw6IHJlcXVlc3QudXJsLAogICAgICAgICAgICBtZXRob2Q6IHJlcXVlc3QubWV0aG9kLAogICAgICAgICAgICBoZWFkZXJzOiBBcnJheS5mcm9tKHJlcXVlc3QuaGVhZGVycyksCiAgICAgICAgICAgIGJvZHk6IGF3YWl0IHJlcXVlc3QudGV4dCgpLAogICAgICAgIH07CiAgICAgICAgY29uc3QgcmVzcFBheWxvYWQgPSBhd2FpdCB0aGlzLnNlbmRScGNGb3JSZXN1bHQoewogICAgICAgICAgICBycGM6ICdmZXRjaCcsCiAgICAgICAgICAgIHNwZWM6IHBheWxvYWQsCiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIG5ldyBSZXNwb25zZShyZXNwUGF5bG9hZC5ib2R5LCB7CiAgICAgICAgICAgIHN0YXR1czogcmVzcFBheWxvYWQuc3RhdHVzLAogICAgICAgICAgICBoZWFkZXJzOiBuZXcgSGVhZGVycyhyZXNwUGF5bG9hZC5oZWFkZXJzID8/IFtdKSwKICAgICAgICB9KTsKICAgIH0KICAgIHVzZVZ1ZVN0YXRlKGtleSwgaW5pdGlhbCkgewogICAgICAgIGNvbnNvbGUubG9nKCJUT0RPOiB1c2VWdWVTdGF0ZSIsIGtleSwgaW5pdGlhbCk7CiAgICAgICAgcmV0dXJuIGluaXRpYWw7CiAgICB9CiAgICByZXBvcnRSZWFkeSgpIHsKICAgICAgICB0aGlzLnBvcnQucG9zdE1lc3NhZ2UoeyBycGM6ICdyZXBvcnRSZWFkeScgfSk7CiAgICB9CiAgICBzZW5kUnBjKGRhdGEpIHsKICAgICAgICB0aGlzLnBvcnQucG9zdE1lc3NhZ2UoZGF0YSk7CiAgICB9CiAgICBzZW5kUnBjRm9yUmVzdWx0KGRhdGEpIHsKICAgICAgICBjb25zdCBwcm9taXNlTnVtID0gdGhpcy5uZXh0UHJvbWlzZSsrOwogICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgob2ssIGZhaWwpID0+IHsKICAgICAgICAgICAgdGhpcy5zZW5kUnBjKHsgLi4uZGF0YSwgaWQ6IHByb21pc2VOdW0gfSk7CiAgICAgICAgICAgIHRoaXMucHJvbWlzZXMuc2V0KHByb21pc2VOdW0sIFsKICAgICAgICAgICAgICAgIHZhbHVlID0+IG9rKHZhbHVlKSwKICAgICAgICAgICAgICAgIGVycm9yID0+IGZhaWwoZXJyb3IpLAogICAgICAgICAgICBdKTsKICAgICAgICB9KTsKICAgICAgICAvLyBkaXN0LWFwcDovcHJvdG9jb2xlbmRwb2ludHMvaHR0cC9pbnZva2UKICAgIH0KfTsKZnVuY3Rpb24gcmVjZWl2ZU1lc3NhZ2VQb3J0KCkgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKChvaywgcmVqZWN0KSA9PiB7CiAgICAgICAgZnVuY3Rpb24gaGFuZGxlRXZlbnQoZXZlbnQpIHsKICAgICAgICAgICAgaWYgKGV2ZW50Lm9yaWdpbiAhPT0gIntPUklHSU59IikKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgaWYgKHR5cGVvZiBldmVudC5kYXRhICE9PSAnb2JqZWN0JyB8fCAhZXZlbnQuZGF0YSkKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgaWYgKHR5cGVvZiBldmVudC5kYXRhLnByb3RvY29sICE9PSAnc3RyaW5nJykKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLCBoYW5kbGVFdmVudCk7CiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIiwgKCkgPT4gewogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcigiUmVjZWl2ZWQgYSBzZWNvbmQgcHJvdG9jb2wgaW5pdGlhdGlvbj8/IFJlbG9hZGluZyIpOwogICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgICBldmVudC5wb3J0cz8ubWFwKHBvcnQgPT4gcG9ydC5wb3N0TWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgICAgICAgIHJwYzogJ3JlY3ljbGUtZnJhbWUnLAogICAgICAgICAgICAgICAgICAgIH0pKSA/PyBbXTsKICAgICAgICAgICAgICAgICAgICBpZiAocG9ydCkKICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcigiUmVjZWl2ZWQgcHJvdG9jb2wgcGFja2V0IHdpdGhvdXQgYSBwb3J0IikpOwogICAgICAgICAgICAgICAgICAgIG9rKHBvcnQpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZmluYWxseSB7CiAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LCBmYWxzZSk7CiAgICAgICAgICAgIGlmIChldmVudC5kYXRhLnByb3RvY29sICE9PSAncHJvdG9jb2wuZGlzdC5hcHAvdjFhbHBoYTEnKQogICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcigiUmVjZWl2ZWQgdW5leHBlY3RlZCBwcm90b2NvbCAiICsgZXZlbnQuZGF0YS5wcm90b2NvbCkpOwogICAgICAgICAgICBjb25zdCBbcG9ydF0gPSBldmVudC5wb3J0cyA/PyBbXTsKICAgICAgICAgICAgaWYgKCFwb3J0KQogICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcigiUmVjZWl2ZWQgcHJvdG9jb2wgcGFja2V0IHdpdGhvdXQgYSBwb3J0IikpOwogICAgICAgICAgICBvayhwb3J0KTsKICAgICAgICB9CiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLCBoYW5kbGVFdmVudCwgZmFsc2UpOwogICAgfSk7Cn0K');
