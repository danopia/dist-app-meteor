import { Meteor } from 'meteor/meteor';
export const iframeEntrypointText = atob(`
Y29uc3Qgb3JpZ2luYWxGZXRjaD1nbG9iYWxUaGlzLmZldGNoO2NvbnN0IGZldGNoUHJvdG9jb2xzPW5ldyBNYXA7Z2xvYmFsVGhp
cy5mZXRjaD1hc3luYyhyZXEsb3B0cyk9Pntjb25zdCB1cmw9bmV3IFVSTChyZXEgaW5zdGFuY2VvZiBSZXF1ZXN0P3JlcS51cmw6
cmVxLnRvU3RyaW5nKCkpO2NvbnNvbGUuZGVidWcoImZldGNoIHRvIix1cmwucHJvdG9jb2wpO2NvbnN0IGhhbmRsZXI9ZmV0Y2hQ
cm90b2NvbHMuZ2V0KHVybC5wcm90b2NvbCl8fG9yaWdpbmFsRmV0Y2g7cmV0dXJuIGF3YWl0IGhhbmRsZXIocmVxLG9wdHMpfTtj
b25zdCBTZXNzaW9uSWQ9Y3J5cHRvLnJhbmRvbVVVSUQoKTtjbGFzcyBEaXN0QXBwe3N0YXRpYyBhc3luYyBjb25uZWN0KCl7Y29u
c3QgcG9ydD1hd2FpdCByZWNlaXZlTWVzc2FnZVBvcnQoKTtyZXR1cm4gbmV3IERpc3RBcHAocG9ydCl9aGFuZGxlTWVzc2FnZShl
dnQpe2NvbnN0IGVudGl0eT1ldnQuZGF0YTtpZighKCJvcmlnSWQiaW4gZW50aXR5KXx8dHlwZW9mIGVudGl0eS5vcmlnSWQhPT0i
bnVtYmVyIil7Y29uc29sZS53YXJuKCJEaXN0QXBwIGdvdCBtZXNzYWdlIHdpdGhvdXQgb3JpZ0lkIixlbnRpdHkpO3JldHVybn1j
b25zdCB3cml0ZXI9dGhpcy5zdHJlYW1Xcml0ZXJzLmdldChlbnRpdHkub3JpZ0lkKTtpZih3cml0ZXIpe2lmKGVudGl0eS5raW5k
PT0iU3RyZWFtRW5kIil7aWYoZW50aXR5LnN0YXR1cy5zdWNjZXNzKXt3cml0ZXIuY2xvc2UoKX1lbHNle3dyaXRlci5hYm9ydChu
ZXcgRXJyb3IoYFN0cmVhbUVuZDogJHtlbnRpdHkuc3RhdHVzLmVycm9yTWVzc2FnZT8/Ik5vIG1lc3NhZ2UgZ2l2ZW4uIn1gKSl9
dGhpcy5zdHJlYW1Xcml0ZXJzLmRlbGV0ZShlbnRpdHkub3JpZ0lkKX1lbHNle3dyaXRlci53cml0ZShlbnRpdHkpfXJldHVybn1p
ZihlbnRpdHkua2luZD09IlN0cmVhbVN0YXJ0Iil7Y29uc3QgcGFpcj10aGlzLnByb21pc2VzLmdldChlbnRpdHkub3JpZ0lkKTtp
ZihwYWlyKXtjb25zdCBzdHJlYW09bmV3IFRyYW5zZm9ybVN0cmVhbTt0aGlzLnByb21pc2VzLmRlbGV0ZShlbnRpdHkub3JpZ0lk
KTt0aGlzLnN0cmVhbVdyaXRlcnMuc2V0KGVudGl0eS5vcmlnSWQsc3RyZWFtLndyaXRhYmxlLmdldFdyaXRlcigpKTtwYWlyWzBd
KHN0cmVhbS5yZWFkYWJsZSk7cmV0dXJufX1pZihlbnRpdHkua2luZD09IkZldGNoUmVzcG9uc2UiKXtjb25zdCBwYWlyMT10aGlz
LnByb21pc2VzLmdldChlbnRpdHkub3JpZ0lkKTtpZihwYWlyMSl7dGhpcy5wcm9taXNlcy5kZWxldGUoZW50aXR5Lm9yaWdJZCk7
cGFpcjFbMF0oZW50aXR5KTtyZXR1cm59fWlmKGVudGl0eS5raW5kPT0iRmV0Y2hFcnJvciIpe2NvbnN0IHBhaXIyPXRoaXMucHJv
bWlzZXMuZ2V0KGVudGl0eS5vcmlnSWQpO2lmKHBhaXIyKXt0aGlzLnByb21pc2VzLmRlbGV0ZShlbnRpdHkub3JpZ0lkKTtwYWly
MlsxXShuZXcgRXJyb3IoZW50aXR5LnNwZWMubWVzc2FnZSkpO3JldHVybn19Y29uc29sZS53YXJuKCJUT0RPOiBEaXN0QXBwIHJl
Y2VpdmVkOiIsZXZ0LmRhdGEpfWFzeW5jIGhhbmRsZUVycm9yKGVycil7YXdhaXQgdGhpcy5mZXRjaCgiL3N5c3RlbS1hcGkvdGVs
ZW1ldHJ5LnYxYWxwaGExLmRpc3QuYXBwL290bHAiLHttZXRob2Q6IlBPU1QiLGJvZHk6SlNPTi5zdHJpbmdpZnkoeyJyZXNvdXJj
ZUxvZ3MiOlt7InJlc291cmNlIjp7ImF0dHJpYnV0ZXMiOlt7ImtleSI6InNlcnZpY2UubmFtZSIsInZhbHVlIjp7InN0cmluZ1Zh
bHVlIjoiZGlzdC5hcHAtdXNlcmxhbmQifX0seyJrZXkiOiJzZXNzaW9uLmlkIiwidmFsdWUiOnsic3RyaW5nVmFsdWUiOlNlc3Np
b25JZH19LF19LCJzY29wZUxvZ3MiOlt7InNjb3BlIjp7fSwibG9nUmVjb3JkcyI6W3sidGltZVVuaXhOYW5vIjpgJHtEYXRlLm5v
dygpfTAwMDAwMGAsInNldmVyaXR5TnVtYmVyIjo5LCJzZXZlcml0eVRleHQiOiJJbmZvIiwibmFtZSI6IlVuY2F1Z2h0RXJyb3Ii
LCJib2R5Ijp7InN0cmluZ1ZhbHVlIjpgVW5jYXVnaHQgJHtlcnIubmFtZX0gaW4gcGFnZWAsImF0dHJpYnV0ZXMiOlt7ImtleSI6
ImVycm9yLm1lc3NhZ2UiLCJ2YWx1ZSI6eyJzdHJpbmdWYWx1ZSI6ZXJyLm1lc3NhZ2V9fSx7ImtleSI6ImVycm9yLm5hbWUiLCJ2
YWx1ZSI6eyJzdHJpbmdWYWx1ZSI6ZXJyLm5hbWV9fSx7ImtleSI6ImVycm9yLnN0YWNrIiwidmFsdWUiOnsic3RyaW5nVmFsdWUi
OmVyci5zdGFja319LF19fV19XX1dfSl9KX1hc3luYyBtb3VudEFwaUJpbmRpbmcoYXBpQmluZGluZ05hbWUpe2NvbnN0IHRva2Vu
UmVzcD1hd2FpdCB0aGlzLmZldGNoKGAvQXBpQmluZGluZy8ke2FwaUJpbmRpbmdOYW1lfS9tb3VudGAse21ldGhvZDoiUE9TVCJ9
KTtpZih0b2tlblJlc3Auc3RhdHVzPT00MDMpcmV0dXJuIG51bGw7aWYoIXRva2VuUmVzcC5vayl0aHJvdyBuZXcgRXJyb3IoYEFw
aUJpbmRpbmcgTW91bnQgb2YgJHtKU09OLnN0cmluZ2lmeShhcGlCaW5kaW5nTmFtZSl9IG5vdCBPSyBgK2AoSFRUUCAke3Rva2Vu
UmVzcC5zdGF0dXN9KQoKYCtgVXBzdHJlYW0gcmVzcG9uc2UgYm9keToKJHthd2FpdCB0b2tlblJlc3AudGV4dCgpfWApO2NvbnN0
IHRva2VuPWF3YWl0IHRva2VuUmVzcC50ZXh0KCk7Y29uc29sZS5sb2coe3Rva2VufSk7cmV0dXJuIHRva2VufWFzeW5jIGZldGNo
KHJlcSxvcHRzKXtpZih0eXBlb2YgcmVxPT0ic3RyaW5nIil7cmV0dXJuIGF3YWl0IHRoaXMuaGFuZGxlRmV0Y2goe21ldGhvZDpv
cHRzPy5tZXRob2R8fCJHRVQiLHVybDpyZXEsaGVhZGVyczpuZXcgSGVhZGVycyhvcHRzPy5oZWFkZXJzKSxib2R5Om9wdHM/LmJv
ZHkhPW51bGw/YXdhaXQgbmV3IFJlc3BvbnNlKG9wdHMuYm9keSkudGV4dCgpOm51bGx9KX1jb25zdCByZXF1ZXN0PW5ldyBSZXF1
ZXN0KHJlcSxvcHRzKTtyZXR1cm4gYXdhaXQgdGhpcy5oYW5kbGVGZXRjaCh7bWV0aG9kOnJlcXVlc3QubWV0aG9kLHVybDpyZXF1
ZXN0LnVybCxoZWFkZXJzOnJlcXVlc3QuaGVhZGVycyxib2R5OmF3YWl0IHJlcXVlc3QudGV4dCgpfHxudWxsfSl9YXN5bmMgaGFu
ZGxlRmV0Y2gocmVxdWVzdCl7Y29uc3QgcmVzcFBheWxvYWQ9YXdhaXQgdGhpcy5zZW5kUnBjRm9yUmVzdWx0KHtraW5kOiJGZXRj
aFJlcXVlc3QiLGlkOi0xLHNwZWM6e3VybDpyZXF1ZXN0LnVybCxtZXRob2Q6cmVxdWVzdC5tZXRob2QsaGVhZGVyczpBcnJheS5m
cm9tKHJlcXVlc3QuaGVhZGVycyksYm9keTpyZXF1ZXN0LmJvZHk/P3VuZGVmaW5lZH19KTtpZihyZXNwUGF5bG9hZCBpbnN0YW5j
ZW9mIFJlYWRhYmxlU3RyZWFtKXtjb25zdCByZXNwUmVhZGVyPXJlc3BQYXlsb2FkLmdldFJlYWRlcigpO2NvbnN0IHJlc3A9YXdh
aXQgcmVzcFJlYWRlci5yZWFkKCk7cmVzcFJlYWRlci5yZWxlYXNlTG9jaygpO2lmKCFyZXNwLnZhbHVlfHxyZXNwLnZhbHVlLmtp
bmQhPT0iRmV0Y2hSZXNwb25zZSIpe3Rocm93IG5ldyBFcnJvcihgQlVHOiB3ZWlyZCBmZXRjaCBzdHJlYW1gKX1yZXR1cm4gbmV3
IFJlc3BvbnNlKHJlc3BQYXlsb2FkLnBpcGVUaHJvdWdoKG5ldyBUcmFuc2Zvcm1TdHJlYW0oe3RyYW5zZm9ybShjaHVuayxjdGxy
KXtpZihjaHVuay5raW5kIT09IkZldGNoQm9keUNodW5rIil0aHJvdyBuZXcgRXJyb3IoYEJVRzogd2VpcmQgZmV0Y2ggYm9keSBj
aHVua2ApO2N0bHIuZW5xdWV1ZShjaHVuay5zcGVjLmNodW5rKX19KSkse3N0YXR1czpyZXNwLnZhbHVlLnNwZWMuc3RhdHVzLGhl
YWRlcnM6bmV3IEhlYWRlcnMocmVzcC52YWx1ZS5zcGVjLmhlYWRlcnM/P1tdKX0pfWVsc2V7aWYocmVzcFBheWxvYWQuc3BlYy5i
b2R5U3RyZWFtIT1udWxsKXRocm93IG5ldyBFcnJvcihgVE9ETzogc3RyZWFtYCk7cmV0dXJuIG5ldyBSZXNwb25zZShyZXNwUGF5
bG9hZC5zcGVjLmJvZHl8fG51bGwse3N0YXR1czpyZXNwUGF5bG9hZC5zcGVjLnN0YXR1cyxoZWFkZXJzOm5ldyBIZWFkZXJzKHJl
c3BQYXlsb2FkLnNwZWMuaGVhZGVycz8/W10pfSl9fXVzZVZ1ZVN0YXRlKGtleSxpbml0aWFsKXtjb25zb2xlLmxvZygiVE9ETzog
dXNlVnVlU3RhdGUiLGtleSxpbml0aWFsKTtyZXR1cm4gaW5pdGlhbH1yZXBvcnRSZWFkeSgpe3RoaXMuc2VuZFJwYyh7a2luZDoi
TGlmZWN5Y2xlIixzcGVjOntzdGFnZToicmVhZHkifX0pfWxhdW5jaEludGVudChpbnRlbnQpe3RoaXMuc2VuZFJwYyh7a2luZDoi
TGF1bmNoSW50ZW50IixzcGVjOmludGVudH0pfXNlbmRScGMoZGF0YSl7dGhpcy5wb3J0LnBvc3RNZXNzYWdlKGRhdGEpfXNlbmRS
cGNGb3JSZXN1bHQoZGF0YSl7Y29uc3QgcHJvbWlzZU51bT10aGlzLm5leHRQcm9taXNlKys7cmV0dXJuIG5ldyBQcm9taXNlKChv
ayxmYWlsKT0+e3RoaXMuc2VuZFJwYyh7Li4uZGF0YSxpZDpwcm9taXNlTnVtfSk7dGhpcy5wcm9taXNlcy5zZXQocHJvbWlzZU51
bSxbdmFsdWU9Pm9rKHZhbHVlKSxlcnJvcj0+ZmFpbChlcnJvciksXSl9KX1jb25zdHJ1Y3Rvcihwb3J0KXt0aGlzLnBvcnQ9cG9y
dDt0aGlzLm5leHRQcm9taXNlPTA7dGhpcy5wcm9taXNlcz1uZXcgTWFwO3RoaXMuc3RyZWFtV3JpdGVycz1uZXcgTWFwO3BvcnQu
YWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsZXZ0PT50aGlzLmhhbmRsZU1lc3NhZ2UoZXZ0KSk7cG9ydC5zdGFydCgpO3dpbmRv
dy5hZGRFdmVudExpc3RlbmVyKCJlcnJvciIsZXZ0PT50aGlzLmhhbmRsZUVycm9yKGV2dC5lcnJvcikuY2F0Y2goZXJyPT5jb25z
b2xlLmVycm9yKGVycikpKTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigidW5oYW5kbGVkcmVqZWN0aW9uIixldnQ9PnRoaXMuaGFu
ZGxlRXJyb3IoZXZ0LnJlYXNvbikuY2F0Y2goZXJyPT5jb25zb2xlLmVycm9yKGVycikpKTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5l
cigidW5sb2FkIiwoKT0+dGhpcy5zZW5kUnBjKHtraW5kOiJMaWZlY3ljbGUiLHNwZWM6e3N0YWdlOiJ1bmxvYWQifX0pKTtmZXRj
aFByb3RvY29scy5zZXQoImRpc3QtYXBwOiIsKGlucHV0LGluaXQpPT50aGlzLmZldGNoKGlucHV0LGluaXQpKX19Z2xvYmFsVGhp
cy5EaXN0QXBwPURpc3RBcHA7ZnVuY3Rpb24gcmVjZWl2ZU1lc3NhZ2VQb3J0KCl7cmV0dXJuIG5ldyBQcm9taXNlKChvayxyZWpl
Y3QpPT57ZnVuY3Rpb24gaGFuZGxlRXZlbnQoZXZlbnQpe2lmKGV2ZW50Lm9yaWdpbiE9PSJ7T1JJR0lOfSIpcmV0dXJuO2lmKHR5
cGVvZiBldmVudC5kYXRhIT09Im9iamVjdCJ8fCFldmVudC5kYXRhKXJldHVybjtpZih0eXBlb2YgZXZlbnQuZGF0YS5wcm90b2Nv
bCE9PSJzdHJpbmciKXJldHVybjt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsaGFuZGxlRXZlbnQpO3dpbmRv
dy5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixzZWNvbmRFdmVudD0+e2lmKHNlY29uZEV2ZW50Lm9yaWdpbiE9PSJ7T1JJR0lO
fSIpcmV0dXJuO2NvbnNvbGUuZXJyb3IoIlJlY2VpdmVkIGEgc2Vjb25kIHByb3RvY29sIGluaXRpYXRpb24/PyBSZWxvYWRpbmci
KTt0cnl7Y29uc3QgZW50aXR5PXtraW5kOiJMaWZlY3ljbGUiLHNwZWM6e3N0YWdlOiJyZWN5Y2xlIn19O2V2ZW50LnBvcnRzPy5t
YXAocG9ydD0+cG9ydC5wb3N0TWVzc2FnZShlbnRpdHkpKT8/W107aWYocG9ydClyZWplY3QobmV3IEVycm9yKCJSZWNlaXZlZCBw
cm90b2NvbCBwYWNrZXQgd2l0aG91dCBhIHBvcnQiKSl9ZmluYWxseXt3aW5kb3cubG9jYXRpb24ucmVsb2FkKCl9fSxmYWxzZSk7
aWYoZXZlbnQuZGF0YS5wcm90b2NvbCE9PSJwcm90b2NvbC5kaXN0LmFwcC92MWFscGhhMSIpcmVqZWN0KG5ldyBFcnJvcigiUmVj
ZWl2ZWQgdW5leHBlY3RlZCBwcm90b2NvbCAiK2V2ZW50LmRhdGEucHJvdG9jb2wpKTtjb25zdFtwb3J0XT1ldmVudC5wb3J0cz8/
W107aWYoIXBvcnQpcmVqZWN0KG5ldyBFcnJvcigiUmVjZWl2ZWQgcHJvdG9jb2wgcGFja2V0IHdpdGhvdXQgYSBwb3J0IikpO29r
KHBvcnQpfXdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixoYW5kbGVFdmVudCxmYWxzZSk7d2luZG93LnBhcmVudC5w
b3N0TWVzc2FnZSh7InByb3RvY29sIjoicHJvdG9jb2wuZGlzdC5hcHAvdjFhbHBoYTEifSwiKiIpfSl9Y2xhc3MgQXBpQmluZGlu
Z01vdW50e2FzeW5jIGZldGNoKHJlcSxvcHRzKXtjb25zdCBhcGlQYXRoPXJlcS5zdGFydHNXaXRoKCIvIik/cmVxLnNsaWNlKDEp
OigoKT0+e2NvbnN0IHVybD1uZXcgVVJMKHJlcSk7cmV0dXJuIHVybC5wYXRobmFtZS5zbGljZSgxKSt1cmwuc2VhcmNoK3VybC5o
YXNofSkoKTtyZXR1cm4gYXdhaXQgdGhpcy5kaXN0QXBwLmZldGNoKGAvY2FwLyR7dGhpcy50b2tlbn0vJHthcGlQYXRofWAsey4u
Lm9wdHN9KX1jb25zdHJ1Y3RvcihkaXN0QXBwLGFwaUJpbmRpbmdOYW1lLHRva2VuKXt0aGlzLmRpc3RBcHA9ZGlzdEFwcDt0aGlz
LmFwaUJpbmRpbmdOYW1lPWFwaUJpbmRpbmdOYW1lO3RoaXMudG9rZW49dG9rZW59fWdsb2JhbFRoaXMuQXBpQmluZGluZ01vdW50
PUFwaUJpbmRpbmdNb3VudDtleHBvcnR7fQoK
`);
export const iframeEntrypointBlob = new Blob([
  iframeEntrypointText.replace('{ORIGIN}', new URL(Meteor.absoluteUrl()).origin),
], {type: 'text/javascript'});
export const iframeEntrypointUrl = URL.createObjectURL(iframeEntrypointBlob);
