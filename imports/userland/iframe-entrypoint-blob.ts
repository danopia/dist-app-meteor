export const iframeEntrypoint = atob('Y29uc3Qgb3JpZ2luYWxGZXRjaCA9IGdsb2JhbFRoaXMuZmV0Y2g7CmNvbnN0IGZldGNoUHJvdG9jb2xzID0gbmV3IE1hcCgpOwpnbG9iYWxUaGlzLmZldGNoID0gYXN5bmMgKHJlcSwgb3B0cykgPT4gewogICAgY29uc3QgdXJsID0gbmV3IFVSTChyZXEgaW5zdGFuY2VvZiBSZXF1ZXN0ID8gcmVxLnVybCA6IHJlcS50b1N0cmluZygpKTsKICAgIGNvbnNvbGUuZGVidWcoJ2ZldGNoIHRvJywgdXJsLnByb3RvY29sKTsKICAgIGNvbnN0IGhhbmRsZXIgPSBmZXRjaFByb3RvY29scy5nZXQodXJsLnByb3RvY29sKSB8fCBvcmlnaW5hbEZldGNoOwogICAgcmV0dXJuIGF3YWl0IGhhbmRsZXIocmVxLCBvcHRzKTsKfTsKZ2xvYmFsVGhpcy5EaXN0QXBwID0gY2xhc3MgRGlzdEFwcCB7CiAgICBjb25zdHJ1Y3Rvcihwb3J0KSB7CiAgICAgICAgdGhpcy5wb3J0ID0gcG9ydDsKICAgICAgICB0aGlzLm5leHRQcm9taXNlID0gMDsKICAgICAgICB0aGlzLnByb21pc2VzID0gbmV3IE1hcCgpOwogICAgICAgIC8vIEhvb2sgdXAgc29tZSBoYW5kbGVyczoKICAgICAgICBwb3J0LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLCBldnQgPT4gdGhpcwogICAgICAgICAgICAuaGFuZGxlTWVzc2FnZShldnQpKTsKICAgICAgICBwb3J0LnN0YXJ0KCk7CiAgICAgICAgZmV0Y2hQcm90b2NvbHMuc2V0KCdkaXN0LWFwcDonLCAoaW5wdXQsIGluaXQpID0+IHRoaXMKICAgICAgICAgICAgLmhhbmRsZUZldGNoKG5ldyBSZXF1ZXN0KGlucHV0LCBpbml0KSkpOwogICAgfQogICAgc3RhdGljIGFzeW5jIGNvbm5lY3QoKSB7CiAgICAgICAgY29uc3QgcG9ydCA9IGF3YWl0IHJlY2VpdmVNZXNzYWdlUG9ydCgpOwogICAgICAgIHJldHVybiBuZXcgRGlzdEFwcChwb3J0KTsKICAgIH0KICAgIGhhbmRsZU1lc3NhZ2UoZXZ0KSB7CiAgICAgICAgaWYgKGV2dC5kYXRhLnJwYyA9PSAncmVzcG9uZCcpIHsKICAgICAgICAgICAgY29uc3QgcGFpciA9IHRoaXMucHJvbWlzZXMuZ2V0KGV2dC5kYXRhLm9yaWdJZCk7CiAgICAgICAgICAgIGlmIChwYWlyKSB7CiAgICAgICAgICAgICAgICB0aGlzLnByb21pc2VzLmRlbGV0ZShldnQuZGF0YS5vcmlnSWQpOwogICAgICAgICAgICAgICAgcGFpclswXShldnQuZGF0YS5kYXRhKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBjb25zb2xlLndhcm4oJ1RPRE86IERpc3RBcHAgcmVjZWl2ZWQ6JywgZXZ0LmRhdGEpOwogICAgfQogICAgYXN5bmMgaGFuZGxlRmV0Y2gocmVxdWVzdCkgewogICAgICAgIGNvbnN0IHBheWxvYWQgPSB7CiAgICAgICAgICAgIHVybDogcmVxdWVzdC51cmwsCiAgICAgICAgICAgIG1ldGhvZDogcmVxdWVzdC5tZXRob2QsCiAgICAgICAgICAgIGhlYWRlcnM6IEFycmF5LmZyb20ocmVxdWVzdC5oZWFkZXJzKSwKICAgICAgICAgICAgYm9keTogYXdhaXQgcmVxdWVzdC50ZXh0KCksCiAgICAgICAgfTsKICAgICAgICAvLyBjb25zb2xlLmxvZygnZmV0Y2ggcGF5bG9hZCcsIHBheWxvYWQpOwogICAgICAgIGNvbnN0IHJlc3BQYXlsb2FkID0gYXdhaXQgdGhpcy5zZW5kUnBjRm9yUmVzdWx0KHsKICAgICAgICAgICAgcnBjOiAnZmV0Y2gnLAogICAgICAgICAgICBzcGVjOiBwYXlsb2FkLAogICAgICAgIH0pOwogICAgICAgIGNvbnN0IHJlc3BEYXRhID0gSlNPTi5wYXJzZShyZXNwUGF5bG9hZC5ib2R5KTsKICAgICAgICByZXR1cm4gbmV3IFJlc3BvbnNlKHJlc3BEYXRhLmJvZHksIHsKICAgICAgICAgICAgc3RhdHVzOiByZXNwRGF0YS5zdGF0dXMsCiAgICAgICAgICAgIGhlYWRlcnM6IG5ldyBIZWFkZXJzKHJlc3BEYXRhLmhlYWRlcnMgPz8gW10pLAogICAgICAgIH0pOwogICAgICAgIC8vIHRocm93IG5ldyBFcnJvcigiVE9ETyIpOwogICAgfQogICAgdXNlVnVlU3RhdGUoa2V5LCBpbml0aWFsKSB7CiAgICAgICAgY29uc29sZS5sb2coIlRPRE86IHVzZVZ1ZVN0YXRlIiwga2V5LCBpbml0aWFsKTsKICAgICAgICByZXR1cm4gaW5pdGlhbDsKICAgIH0KICAgIHJlcG9ydFJlYWR5KCkgewogICAgICAgIHRoaXMucG9ydC5wb3N0TWVzc2FnZSh7IHJwYzogJ3JlcG9ydFJlYWR5JyB9KTsKICAgIH0KICAgIHNlbmRScGMoZGF0YSkgewogICAgICAgIHRoaXMucG9ydC5wb3N0TWVzc2FnZShkYXRhKTsKICAgIH0KICAgIHNlbmRScGNGb3JSZXN1bHQoZGF0YSkgewogICAgICAgIGNvbnN0IHByb21pc2VOdW0gPSB0aGlzLm5leHRQcm9taXNlKys7CiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChvaywgZmFpbCkgPT4gewogICAgICAgICAgICB0aGlzLnNlbmRScGMoeyAuLi5kYXRhLCBpZDogcHJvbWlzZU51bSB9KTsKICAgICAgICAgICAgdGhpcy5wcm9taXNlcy5zZXQocHJvbWlzZU51bSwgWwogICAgICAgICAgICAgICAgdmFsdWUgPT4gb2sodmFsdWUpLAogICAgICAgICAgICAgICAgZXJyb3IgPT4gZmFpbChlcnJvciksCiAgICAgICAgICAgIF0pOwogICAgICAgIH0pOwogICAgICAgIC8vIGRpc3QtYXBwOi9wcm90b2NvbGVuZHBvaW50cy9odHRwL2ludm9rZQogICAgfQp9OwpmdW5jdGlvbiByZWNlaXZlTWVzc2FnZVBvcnQoKSB7CiAgICByZXR1cm4gbmV3IFByb21pc2UoKG9rLCByZWplY3QpID0+IHsKICAgICAgICBmdW5jdGlvbiBoYW5kbGVFdmVudChldmVudCkgewogICAgICAgICAgICBpZiAoZXZlbnQub3JpZ2luICE9PSAie09SSUdJTn0iKQogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICBpZiAodHlwZW9mIGV2ZW50LmRhdGEgIT09ICdvYmplY3QnIHx8ICFldmVudC5kYXRhKQogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICBpZiAodHlwZW9mIGV2ZW50LmRhdGEucHJvdG9jb2wgIT09ICdzdHJpbmcnKQogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsIGhhbmRsZUV2ZW50KTsKICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLCAoKSA9PiB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCJSZWNlaXZlZCBhIHNlY29uZCBwcm90b2NvbCBpbml0aWF0aW9uPz8gUmVsb2FkaW5nIik7CiAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgIGV2ZW50LnBvcnRzPy5tYXAocG9ydCA9PiBwb3J0LnBvc3RNZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICAgICAgcnBjOiAncmVjeWNsZS1mcmFtZScsCiAgICAgICAgICAgICAgICAgICAgfSkpID8/IFtdOwogICAgICAgICAgICAgICAgICAgIGlmIChwb3J0KQogICAgICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKCJSZWNlaXZlZCBwcm90b2NvbCBwYWNrZXQgd2l0aG91dCBhIHBvcnQiKSk7CiAgICAgICAgICAgICAgICAgICAgb2socG9ydCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmaW5hbGx5IHsKICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIGZhbHNlKTsKICAgICAgICAgICAgaWYgKGV2ZW50LmRhdGEucHJvdG9jb2wgIT09ICdwcm90b2NvbC5kaXN0LmFwcC92MWFscGhhMScpCiAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKCJSZWNlaXZlZCB1bmV4cGVjdGVkIHByb3RvY29sICIgKyBldmVudC5kYXRhLnByb3RvY29sKSk7CiAgICAgICAgICAgIGNvbnN0IFtwb3J0XSA9IGV2ZW50LnBvcnRzID8/IFtdOwogICAgICAgICAgICBpZiAoIXBvcnQpCiAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKCJSZWNlaXZlZCBwcm90b2NvbCBwYWNrZXQgd2l0aG91dCBhIHBvcnQiKSk7CiAgICAgICAgICAgIG9rKHBvcnQpOwogICAgICAgIH0KICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsIGhhbmRsZUV2ZW50LCBmYWxzZSk7CiAgICB9KTsKfQo=');
