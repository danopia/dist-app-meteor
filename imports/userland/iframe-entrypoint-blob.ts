import { Meteor } from 'meteor/meteor';
export const iframeEntrypointText = atob(`
Y29uc3Qgb3JpZ2luYWxGZXRjaD1nbG9iYWxUaGlzLmZldGNoO2NvbnN0IGZldGNoUHJvdG9jb2xzPW5ldyBNYXA7Z2xvYmFsVGhp
cy5mZXRjaD1hc3luYyhyZXEsb3B0cyk9Pntjb25zdCB1cmw9bmV3IFVSTChyZXEgaW5zdGFuY2VvZiBSZXF1ZXN0P3JlcS51cmw6
cmVxLnRvU3RyaW5nKCkpO2NvbnNvbGUuZGVidWcoImZldGNoIHRvIix1cmwucHJvdG9jb2wpO2NvbnN0IGhhbmRsZXI9ZmV0Y2hQ
cm90b2NvbHMuZ2V0KHVybC5wcm90b2NvbCl8fG9yaWdpbmFsRmV0Y2g7cmV0dXJuIGF3YWl0IGhhbmRsZXIocmVxLG9wdHMpfTtj
bGFzcyBEaXN0QXBwe3N0YXRpYyBhc3luYyBjb25uZWN0KCl7Y29uc3QgcG9ydD1hd2FpdCByZWNlaXZlTWVzc2FnZVBvcnQoKTty
ZXR1cm4gbmV3IERpc3RBcHAocG9ydCl9aGFuZGxlTWVzc2FnZShldnQpe2NvbnN0IGVudGl0eT1ldnQuZGF0YTtpZihlbnRpdHku
a2luZD09IkZldGNoUmVzcG9uc2UiKXtjb25zdCBwYWlyPXRoaXMucHJvbWlzZXMuZ2V0KGVudGl0eS5vcmlnSWQpO2lmKHBhaXIp
e3RoaXMucHJvbWlzZXMuZGVsZXRlKGVudGl0eS5vcmlnSWQpO3BhaXJbMF0oZW50aXR5KTtyZXR1cm59fWlmKGVudGl0eS5raW5k
PT0iRmV0Y2hFcnJvciIpe2NvbnN0IHBhaXIxPXRoaXMucHJvbWlzZXMuZ2V0KGVudGl0eS5vcmlnSWQpO2lmKHBhaXIxKXt0aGlz
LnByb21pc2VzLmRlbGV0ZShlbnRpdHkub3JpZ0lkKTtwYWlyMVsxXShuZXcgRXJyb3IoZW50aXR5LnNwZWMubWVzc2FnZSkpO3Jl
dHVybn19Y29uc29sZS53YXJuKCJUT0RPOiBEaXN0QXBwIHJlY2VpdmVkOiIsZXZ0LmRhdGEpfWFzeW5jIGhhbmRsZUVycm9yKGVy
cil7Y29uc3R7bmFtZSxtZXNzYWdlLHN0YWNrfT1lcnI7dGhpcy5zZW5kUnBjKHtraW5kOiJXcml0ZURlYnVnRXZlbnQiLHNwZWM6
e3RpbWVzdGFtcDpuZXcgRGF0ZSxsZXZlbDoiZXJyb3IiLHRleHQ6YFVuY2F1Z2h0ICR7bmFtZX0gaW4gcGFnZWAsZXJyb3I6e25h
bWUsbWVzc2FnZSxzdGFja319fSl9YXN5bmMgbW91bnRBcGlCaW5kaW5nKGFwaUJpbmRpbmdOYW1lKXtjb25zdCB0b2tlblJlc3A9
YXdhaXQgdGhpcy5mZXRjaChgL0FwaUJpbmRpbmcvJHthcGlCaW5kaW5nTmFtZX0vbW91bnRgLHttZXRob2Q6IlBPU1QifSk7aWYo
dG9rZW5SZXNwLnN0YXR1cz09NDAzKXJldHVybiBudWxsO2lmKCF0b2tlblJlc3Aub2spdGhyb3cgbmV3IEVycm9yKGBBcGlCaW5k
aW5nIE1vdW50IG9mICR7SlNPTi5zdHJpbmdpZnkoYXBpQmluZGluZ05hbWUpfSBub3QgT0sgYCtgKEhUVFAgJHt0b2tlblJlc3Au
c3RhdHVzfSkKCmArYFVwc3RyZWFtIHJlc3BvbnNlIGJvZHk6CiR7YXdhaXQgdG9rZW5SZXNwLnRleHQoKX1gKTtjb25zdCB0b2tl
bj1hd2FpdCB0b2tlblJlc3AudGV4dCgpO2NvbnNvbGUubG9nKHt0b2tlbn0pO3JldHVybiB0b2tlbn1hc3luYyBmZXRjaChyZXEs
b3B0cyl7aWYodHlwZW9mIHJlcT09InN0cmluZyIpe3JldHVybiBhd2FpdCB0aGlzLmhhbmRsZUZldGNoKHttZXRob2Q6b3B0cz8u
bWV0aG9kfHwiR0VUIix1cmw6cmVxLGhlYWRlcnM6bmV3IEhlYWRlcnMob3B0cz8uaGVhZGVycyksYm9keTpvcHRzPy5ib2R5IT1u
dWxsP2F3YWl0IG5ldyBSZXNwb25zZShvcHRzLmJvZHkpLnRleHQoKTpudWxsfSl9Y29uc3QgcmVxdWVzdD1uZXcgUmVxdWVzdChy
ZXEsb3B0cyk7cmV0dXJuIGF3YWl0IHRoaXMuaGFuZGxlRmV0Y2goe21ldGhvZDpyZXF1ZXN0Lm1ldGhvZCx1cmw6cmVxdWVzdC51
cmwsaGVhZGVyczpyZXF1ZXN0LmhlYWRlcnMsYm9keTphd2FpdCByZXF1ZXN0LnRleHQoKXx8bnVsbH0pfWFzeW5jIGhhbmRsZUZl
dGNoKHJlcXVlc3Qpe2NvbnN0IHJlc3BQYXlsb2FkPWF3YWl0IHRoaXMuc2VuZFJwY0ZvclJlc3VsdCh7a2luZDoiRmV0Y2hSZXF1
ZXN0IixpZDotMSxzcGVjOnt1cmw6cmVxdWVzdC51cmwsbWV0aG9kOnJlcXVlc3QubWV0aG9kLGhlYWRlcnM6QXJyYXkuZnJvbShy
ZXF1ZXN0LmhlYWRlcnMpLGJvZHk6cmVxdWVzdC5ib2R5Pz91bmRlZmluZWR9fSk7aWYocmVzcFBheWxvYWQuc3BlYy5ib2R5U3Ry
ZWFtIT1udWxsKXRocm93IG5ldyBFcnJvcihgVE9ETzogc3RyZWFtYCk7cmV0dXJuIG5ldyBSZXNwb25zZShyZXNwUGF5bG9hZC5z
cGVjLmJvZHl8fG51bGwse3N0YXR1czpyZXNwUGF5bG9hZC5zcGVjLnN0YXR1cyxoZWFkZXJzOm5ldyBIZWFkZXJzKHJlc3BQYXls
b2FkLnNwZWMuaGVhZGVycz8/W10pfSl9dXNlVnVlU3RhdGUoa2V5LGluaXRpYWwpe2NvbnNvbGUubG9nKCJUT0RPOiB1c2VWdWVT
dGF0ZSIsa2V5LGluaXRpYWwpO3JldHVybiBpbml0aWFsfXJlcG9ydFJlYWR5KCl7dGhpcy5zZW5kUnBjKHtraW5kOiJMaWZlY3lj
bGUiLHNwZWM6e3N0YWdlOiJyZWFkeSJ9fSl9bGF1bmNoSW50ZW50KGludGVudCl7dGhpcy5zZW5kUnBjKHtraW5kOiJMYXVuY2hJ
bnRlbnQiLHNwZWM6aW50ZW50fSl9c2VuZFJwYyhkYXRhKXt0aGlzLnBvcnQucG9zdE1lc3NhZ2UoZGF0YSl9c2VuZFJwY0ZvclJl
c3VsdChkYXRhKXtjb25zdCBwcm9taXNlTnVtPXRoaXMubmV4dFByb21pc2UrKztyZXR1cm4gbmV3IFByb21pc2UoKG9rLGZhaWwp
PT57dGhpcy5zZW5kUnBjKHsuLi5kYXRhLGlkOnByb21pc2VOdW19KTt0aGlzLnByb21pc2VzLnNldChwcm9taXNlTnVtLFt2YWx1
ZT0+b2sodmFsdWUpLGVycm9yPT5mYWlsKGVycm9yKSxdKX0pfWNvbnN0cnVjdG9yKHBvcnQpe3RoaXMucG9ydD1wb3J0O3RoaXMu
bmV4dFByb21pc2U9MDt0aGlzLnByb21pc2VzPW5ldyBNYXA7cG9ydC5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixldnQ9PnRo
aXMuaGFuZGxlTWVzc2FnZShldnQpKTtwb3J0LnN0YXJ0KCk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImVycm9yIixldnQ9PnRo
aXMuaGFuZGxlRXJyb3IoZXZ0LmVycm9yKS5jYXRjaChlcnI9PmNvbnNvbGUuZXJyb3IoZXJyKSkpO3dpbmRvdy5hZGRFdmVudExp
c3RlbmVyKCJ1bmhhbmRsZWRyZWplY3Rpb24iLGV2dD0+dGhpcy5oYW5kbGVFcnJvcihldnQucmVhc29uKS5jYXRjaChlcnI9PmNv
bnNvbGUuZXJyb3IoZXJyKSkpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJ1bmxvYWQiLCgpPT50aGlzLnNlbmRScGMoe2tpbmQ6
IkxpZmVjeWNsZSIsc3BlYzp7c3RhZ2U6InVubG9hZCJ9fSkpO2ZldGNoUHJvdG9jb2xzLnNldCgiZGlzdC1hcHA6IiwoaW5wdXQs
aW5pdCk9PnRoaXMuZmV0Y2goaW5wdXQsaW5pdCkpfX1nbG9iYWxUaGlzLkRpc3RBcHA9RGlzdEFwcDtmdW5jdGlvbiByZWNlaXZl
TWVzc2FnZVBvcnQoKXtyZXR1cm4gbmV3IFByb21pc2UoKG9rLHJlamVjdCk9PntmdW5jdGlvbiBoYW5kbGVFdmVudChldmVudCl7
aWYoZXZlbnQub3JpZ2luIT09IntPUklHSU59IilyZXR1cm47aWYodHlwZW9mIGV2ZW50LmRhdGEhPT0ib2JqZWN0Inx8IWV2ZW50
LmRhdGEpcmV0dXJuO2lmKHR5cGVvZiBldmVudC5kYXRhLnByb3RvY29sIT09InN0cmluZyIpcmV0dXJuO3dpbmRvdy5yZW1vdmVF
dmVudExpc3RlbmVyKCJtZXNzYWdlIixoYW5kbGVFdmVudCk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHNlY29u
ZEV2ZW50PT57aWYoc2Vjb25kRXZlbnQub3JpZ2luIT09IntPUklHSU59IilyZXR1cm47Y29uc29sZS5lcnJvcigiUmVjZWl2ZWQg
YSBzZWNvbmQgcHJvdG9jb2wgaW5pdGlhdGlvbj8/IFJlbG9hZGluZyIpO3RyeXtjb25zdCBlbnRpdHk9e2tpbmQ6IkxpZmVjeWNs
ZSIsc3BlYzp7c3RhZ2U6InJlY3ljbGUifX07ZXZlbnQucG9ydHM/Lm1hcChwb3J0PT5wb3J0LnBvc3RNZXNzYWdlKGVudGl0eSkp
Pz9bXTtpZihwb3J0KXJlamVjdChuZXcgRXJyb3IoIlJlY2VpdmVkIHByb3RvY29sIHBhY2tldCB3aXRob3V0IGEgcG9ydCIpKX1m
aW5hbGx5e3dpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKX19LGZhbHNlKTtpZihldmVudC5kYXRhLnByb3RvY29sIT09InByb3RvY29s
LmRpc3QuYXBwL3YxYWxwaGExIilyZWplY3QobmV3IEVycm9yKCJSZWNlaXZlZCB1bmV4cGVjdGVkIHByb3RvY29sICIrZXZlbnQu
ZGF0YS5wcm90b2NvbCkpO2NvbnN0W3BvcnRdPWV2ZW50LnBvcnRzPz9bXTtpZighcG9ydClyZWplY3QobmV3IEVycm9yKCJSZWNl
aXZlZCBwcm90b2NvbCBwYWNrZXQgd2l0aG91dCBhIHBvcnQiKSk7b2socG9ydCl9d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm1l
c3NhZ2UiLGhhbmRsZUV2ZW50LGZhbHNlKTt3aW5kb3cucGFyZW50LnBvc3RNZXNzYWdlKHsicHJvdG9jb2wiOiJwcm90b2NvbC5k
aXN0LmFwcC92MWFscGhhMSJ9LCIqIil9KX1jbGFzcyBBcGlCaW5kaW5nTW91bnR7YXN5bmMgZmV0Y2gocmVxLG9wdHMpe3JldHVy
biBhd2FpdCB0aGlzLmRpc3RBcHAuZmV0Y2goYC9jYXAvJHt0aGlzLnRva2VufS8ke3JlcS5zbGljZSgxKX1gLHsuLi5vcHRzfSl9
Y29uc3RydWN0b3IoZGlzdEFwcCxhcGlCaW5kaW5nTmFtZSx0b2tlbil7dGhpcy5kaXN0QXBwPWRpc3RBcHA7dGhpcy5hcGlCaW5k
aW5nTmFtZT1hcGlCaW5kaW5nTmFtZTt0aGlzLnRva2VuPXRva2VufX1nbG9iYWxUaGlzLkFwaUJpbmRpbmdNb3VudD1BcGlCaW5k
aW5nTW91bnQ7ZXhwb3J0e30KCg==
`);
export const iframeEntrypointBlob = new Blob([
  iframeEntrypointText.replace('{ORIGIN}', new URL(Meteor.absoluteUrl()).origin),
], {type: 'text/javascript'});
export const iframeEntrypointUrl = URL.createObjectURL(iframeEntrypointBlob);
