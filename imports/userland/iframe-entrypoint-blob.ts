import { Meteor } from 'meteor/meteor';
export const iframeEntrypointText = atob('Y29uc3Qgb3JpZ2luYWxGZXRjaCA9IGdsb2JhbFRoaXMuZmV0Y2g7CmNvbnN0IGZldGNoUHJvdG9jb2xzID0gbmV3IE1hcCgpOwpnbG9iYWxUaGlzLmZldGNoID0gYXN5bmMgKHJlcSwgb3B0cyk9PnsKICAgIGNvbnN0IHVybCA9IG5ldyBVUkwocmVxIGluc3RhbmNlb2YgUmVxdWVzdCA/IHJlcS51cmwgOiByZXEudG9TdHJpbmcoKSk7CiAgICBjb25zb2xlLmRlYnVnKCdmZXRjaCB0bycsIHVybC5wcm90b2NvbCk7CiAgICBjb25zdCBoYW5kbGVyID0gZmV0Y2hQcm90b2NvbHMuZ2V0KHVybC5wcm90b2NvbCkgfHwgb3JpZ2luYWxGZXRjaDsKICAgIHJldHVybiBhd2FpdCBoYW5kbGVyKHJlcSwgb3B0cyk7Cn07Ci8vQHRzLWlnbm9yZQpnbG9iYWxUaGlzLkRpc3RBcHAgPSBjbGFzcyBEaXN0QXBwIHsKICAgIHN0YXRpYyBhc3luYyBjb25uZWN0KCkgewogICAgICAgIGNvbnN0IHBvcnQgPSBhd2FpdCByZWNlaXZlTWVzc2FnZVBvcnQoKTsKICAgICAgICByZXR1cm4gbmV3IERpc3RBcHAocG9ydCk7CiAgICB9CiAgICBoYW5kbGVNZXNzYWdlKGV2dCkgewogICAgICAgIGlmIChldnQuZGF0YS5ycGMgPT0gJ3Jlc3BvbmQnKSB7CiAgICAgICAgICAgIGNvbnN0IHBhaXIgPSB0aGlzLnByb21pc2VzLmdldChldnQuZGF0YS5vcmlnSWQpOwogICAgICAgICAgICBpZiAocGFpcikgewogICAgICAgICAgICAgICAgdGhpcy5wcm9taXNlcy5kZWxldGUoZXZ0LmRhdGEub3JpZ0lkKTsKICAgICAgICAgICAgICAgIGlmIChldnQuZGF0YS5lcnJvcikgewogICAgICAgICAgICAgICAgICAgIHBhaXJbMV0obmV3IEVycm9yKGV2dC5kYXRhLmVycm9yKSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHBhaXJbMF0oZXZ0LmRhdGEuZGF0YSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgY29uc29sZS53YXJuKCdUT0RPOiBEaXN0QXBwIHJlY2VpdmVkOicsIGV2dC5kYXRhKTsKICAgIH0KICAgIGFzeW5jIGZldGNoKHJlcSwgb3B0cykgewogICAgICAgIGlmICh0eXBlb2YgcmVxID09ICdzdHJpbmcnKSB7CiAgICAgICAgICAgIHJldHVybiBhd2FpdCB0aGlzLmhhbmRsZUZldGNoKHsKICAgICAgICAgICAgICAgIG1ldGhvZDogb3B0cz8ubWV0aG9kIHx8ICdHRVQnLAogICAgICAgICAgICAgICAgdXJsOiByZXEsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiBuZXcgSGVhZGVycyhvcHRzPy5oZWFkZXJzKSwKICAgICAgICAgICAgICAgIGJvZHk6IG9wdHM/LmJvZHkgIT0gbnVsbCA/IGF3YWl0IG5ldyBSZXNwb25zZShvcHRzLmJvZHkpLnRleHQoKSA6IG51bGwKICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICAgIGNvbnN0IHJlcXVlc3QgPSBuZXcgUmVxdWVzdChyZXEsIG9wdHMpOwogICAgICAgIHJldHVybiBhd2FpdCB0aGlzLmhhbmRsZUZldGNoKHsKICAgICAgICAgICAgbWV0aG9kOiByZXF1ZXN0Lm1ldGhvZCwKICAgICAgICAgICAgdXJsOiByZXF1ZXN0LnVybCwKICAgICAgICAgICAgaGVhZGVyczogcmVxdWVzdC5oZWFkZXJzLAogICAgICAgICAgICBib2R5OiBhd2FpdCByZXF1ZXN0LnRleHQoKSB8fCBudWxsCiAgICAgICAgfSk7CiAgICB9CiAgICBhc3luYyBoYW5kbGVGZXRjaChyZXF1ZXN0KSB7CiAgICAgICAgY29uc3QgcGF5bG9hZCA9IHsKICAgICAgICAgICAgdXJsOiByZXF1ZXN0LnVybCwKICAgICAgICAgICAgbWV0aG9kOiByZXF1ZXN0Lm1ldGhvZCwKICAgICAgICAgICAgaGVhZGVyczogQXJyYXkuZnJvbShyZXF1ZXN0LmhlYWRlcnMpLAogICAgICAgICAgICBib2R5OiByZXF1ZXN0LmJvZHkgPz8gdW5kZWZpbmVkCiAgICAgICAgfTsKICAgICAgICBjb25zdCByZXNwUGF5bG9hZCA9IGF3YWl0IHRoaXMuc2VuZFJwY0ZvclJlc3VsdCh7CiAgICAgICAgICAgIHJwYzogJ2ZldGNoJywKICAgICAgICAgICAgc3BlYzogcGF5bG9hZAogICAgICAgIH0pOwogICAgICAgIHJldHVybiBuZXcgUmVzcG9uc2UocmVzcFBheWxvYWQuYm9keSwgewogICAgICAgICAgICBzdGF0dXM6IHJlc3BQYXlsb2FkLnN0YXR1cywKICAgICAgICAgICAgaGVhZGVyczogbmV3IEhlYWRlcnMocmVzcFBheWxvYWQuaGVhZGVycyA/PyBbXSkKICAgICAgICB9KTsKICAgIH0KICAgIHVzZVZ1ZVN0YXRlKGtleSwgaW5pdGlhbCkgewogICAgICAgIGNvbnNvbGUubG9nKCJUT0RPOiB1c2VWdWVTdGF0ZSIsIGtleSwgaW5pdGlhbCk7CiAgICAgICAgcmV0dXJuIGluaXRpYWw7CiAgICB9CiAgICByZXBvcnRSZWFkeSgpIHsKICAgICAgICB0aGlzLnBvcnQucG9zdE1lc3NhZ2UoewogICAgICAgICAgICBycGM6ICdyZXBvcnRSZWFkeScKICAgICAgICB9KTsKICAgIH0KICAgIHNlbmRScGMoZGF0YSkgewogICAgICAgIHRoaXMucG9ydC5wb3N0TWVzc2FnZShkYXRhKTsKICAgIH0KICAgIHNlbmRScGNGb3JSZXN1bHQoZGF0YSkgewogICAgICAgIGNvbnN0IHByb21pc2VOdW0gPSB0aGlzLm5leHRQcm9taXNlKys7CiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChvaywgZmFpbCk9PnsKICAgICAgICAgICAgdGhpcy5zZW5kUnBjKHsKICAgICAgICAgICAgICAgIC4uLmRhdGEsCiAgICAgICAgICAgICAgICBpZDogcHJvbWlzZU51bQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgdGhpcy5wcm9taXNlcy5zZXQocHJvbWlzZU51bSwgWwogICAgICAgICAgICAgICAgKHZhbHVlKT0+b2sodmFsdWUpLAogICAgICAgICAgICAgICAgKGVycm9yKT0+ZmFpbChlcnJvciksIAogICAgICAgICAgICBdKTsKICAgICAgICB9KTsKICAgIC8vIGRpc3QtYXBwOi9wcm90b2NvbGVuZHBvaW50cy9odHRwL2ludm9rZQogICAgfQogICAgY29uc3RydWN0b3IocG9ydCl7CiAgICAgICAgdGhpcy5wb3J0ID0gcG9ydDsKICAgICAgICB0aGlzLm5leHRQcm9taXNlID0gMDsKICAgICAgICB0aGlzLnByb21pc2VzID0gbmV3IE1hcCgpOwogICAgICAgIC8vIEhvb2sgdXAgc29tZSBoYW5kbGVyczoKICAgICAgICBwb3J0LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLCAoZXZ0KT0+dGhpcy5oYW5kbGVNZXNzYWdlKGV2dCkpOwogICAgICAgIHBvcnQuc3RhcnQoKTsKICAgICAgICBmZXRjaFByb3RvY29scy5zZXQoJ2Rpc3QtYXBwOicsIChpbnB1dCwgaW5pdCk9PnRoaXMuZmV0Y2goaW5wdXQsIGluaXQpKTsKICAgIH0KfTsKZnVuY3Rpb24gcmVjZWl2ZU1lc3NhZ2VQb3J0KCkgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKChvaywgcmVqZWN0KT0+ewogICAgICAgIGZ1bmN0aW9uIGhhbmRsZUV2ZW50KGV2ZW50KSB7CiAgICAgICAgICAgIGlmIChldmVudC5vcmlnaW4gIT09ICJ7T1JJR0lOfSIpIHJldHVybjsKICAgICAgICAgICAgaWYgKHR5cGVvZiBldmVudC5kYXRhICE9PSAnb2JqZWN0JyB8fCAhZXZlbnQuZGF0YSkgcmV0dXJuOwogICAgICAgICAgICBpZiAodHlwZW9mIGV2ZW50LmRhdGEucHJvdG9jb2wgIT09ICdzdHJpbmcnKSByZXR1cm47CiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCJtZXNzYWdlIiwgaGFuZGxlRXZlbnQpOwogICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsICgpPT57CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCJSZWNlaXZlZCBhIHNlY29uZCBwcm90b2NvbCBpbml0aWF0aW9uPz8gUmVsb2FkaW5nIik7CiAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgIGV2ZW50LnBvcnRzPy5tYXAoKHBvcnQpPT5wb3J0LnBvc3RNZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJwYzogJ3JlY3ljbGUtZnJhbWUnCiAgICAgICAgICAgICAgICAgICAgICAgIH0pKSA/PyBbXTsKICAgICAgICAgICAgICAgICAgICBpZiAocG9ydCkgcmVqZWN0KG5ldyBFcnJvcigiUmVjZWl2ZWQgcHJvdG9jb2wgcGFja2V0IHdpdGhvdXQgYSBwb3J0IikpOwogICAgICAgICAgICAgICAgICAgIG9rKHBvcnQpOwogICAgICAgICAgICAgICAgfSBmaW5hbGx5ewogICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwgZmFsc2UpOwogICAgICAgICAgICBpZiAoZXZlbnQuZGF0YS5wcm90b2NvbCAhPT0gJ3Byb3RvY29sLmRpc3QuYXBwL3YxYWxwaGExJykgcmVqZWN0KG5ldyBFcnJvcigiUmVjZWl2ZWQgdW5leHBlY3RlZCBwcm90b2NvbCAiICsgZXZlbnQuZGF0YS5wcm90b2NvbCkpOwogICAgICAgICAgICBjb25zdCBbcG9ydF0gPSBldmVudC5wb3J0cyA/PyBbXTsKICAgICAgICAgICAgaWYgKCFwb3J0KSByZWplY3QobmV3IEVycm9yKCJSZWNlaXZlZCBwcm90b2NvbCBwYWNrZXQgd2l0aG91dCBhIHBvcnQiKSk7CiAgICAgICAgICAgIG9rKHBvcnQpOwogICAgICAgIH0KICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsIGhhbmRsZUV2ZW50LCBmYWxzZSk7CiAgICB9KTsKfQoKCi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRtcC5pc0htUjJUUFZ1Lm1hcA==');
export const iframeEntrypointBlob = new Blob([
  iframeEntrypointText.replace('{ORIGIN}', new URL(Meteor.absoluteUrl()).origin),
], {type: 'text/javascript'});
export const iframeEntrypointUrl = URL.createObjectURL(iframeEntrypointBlob);
