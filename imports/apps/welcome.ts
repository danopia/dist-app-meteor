import type { Entity } from "/imports/entities";
export const AppCatalog: Entity[] = [
  {"apiVersion":"manifest.dist.app/v1alpha1","kind":"Application","metadata":{"name":"app","title":"Welcome","description":"First-time user experience for blank sessions","tags":["poc"]},"spec":{"icon":{"type":"glyph","glyph":{"text":"ðŸš€","backgroundColor":"#347"}}}},
  {"apiVersion":"manifest.dist.app/v1alpha1","kind":"Activity","metadata":{"name":"main","title":"Welcome","ownerReferences":[{"apiVersion":"manifest.dist.app/v1alpha1","kind":"Application","name":"app"}]},"spec":{"intentFilters":[{"action":"app.dist.Main","category":"app.dist.Launcher"},{"action":"app.dist.FTUE","category":"app.dist.Default"}],"windowSizing":{"minWidth":300,"initialWidth":800,"initialHeight":400},"implementation":{"type":"iframe","securityPolicy":{"scriptSrc":["https://widget.time.is"]},"sandboxing":["allow-scripts"],"source":{"type":"piecemeal","htmlLang":"en","metaCharset":"utf-8","headTitle":"dist.app instance","inlineScript":"const distApp = await DistApp.connect();\nglobalThis.signIn = ()=>{\n    distApp.launchIntent({\n        action: 'settings.AddAccount',\n        // flag new_task\n        extras: {\n            'AccountTypes': 'v1alpha1.platform.dist.app'\n        }\n    });\n};\nasync function updateUi() {\n    // const userId = await distApp.fetch('/ApiBinding/session/current-user-id').then(x => x.text());\n    // console.log({userId});\n    const sessions = await distApp.fetch('/ApiBinding/session/recent-sessions').then((x)=>x.ok ? x.json() : null);\n    if (sessions) {\n        const uiList = document.querySelector('#resume-list');\n        while(uiList.firstChild)uiList.removeChild(uiList.firstChild);\n        document.body.classList.add('has-user');\n        for (const session of sessions){\n            const button = document.createElement('button');\n            button.type = 'button';\n            button.addEventListener('click', ()=>restoreSession(session.metadata));\n            button.innerText = session.metadata.title || session.metadata.name;\n            const root = document.createElement('li');\n            root.appendChild(button);\n            uiList.appendChild(root);\n        }\n    } else {\n        document.body.classList.remove('has-user');\n    }\n}\nawait updateUi();\nsetTimeout(updateUi, 1000);\nsetInterval(updateUi, 5000); // TODO: prevent parallel runs, also instead do proper eventing.\nasync function restoreSession(metadata) {\n    await distApp.fetch('/ApiBinding/session/by-name/' + metadata.name + '/restore', {\n        method: 'POST'\n    });\n}\nawait distApp.reportReady();\n\n\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,IntcInZlcnNpb25cIjozLFwic291cmNlc1wiOltdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJcIixcImZpbGVcIjpcInN0ZG91dFwifSI=","bodyHtml":"<h1>Welcome to a dist.app shell.</h1>\n<p>\n  This platform offers an experimental way of launching web-based applications.\n  The principles of least-privilege, stateless programming, and single-purpose program units are leveraged together to reduce individual application complexity.\n</p>\n<div class=\"resume-section\">\n  <h2>Recent Sessions</h2>\n  <p>Pick up where you left off by restoring a previous session.</p>\n  <ul id=\"resume-list\"></ul>\n</div>\n<div class=\"guest-section\">\n  <p>\n    This is a Guest shell, which means that the session data stays on this browser.\n    Your session can be kept for next time by signing in with your Google account.\n  </p>\n  <p style=\"text-align: center;\">\n    <button onclick=\"signIn()\">Sign in to dist.app</button>\n  </p>\n  <p>\n    To try out some demo applications, please look through the on-screen app tray.\n  </p>\n</div>\n","inlineStyle":"body:not(.has-user) .resume-section {\n  display: none;\n}\nbody.has-user .guest-section {\n  display: none;\n}\nhtml {\n  height: 100%;\n  display: grid;\n  align-content: center;\n}\nbody {\n  font-family: sans-serif;\n  box-sizing: border-box;\n  overflow-y: scroll;\n  padding: 1em 10% 3em;\n}\nbutton {\n  padding: 0.3em 1em;\n  font-size: 1.2em;\n  width: 50%;\n  max-width: 20em;\n}\n@media (prefers-color-scheme: dark) {\n  body {\n    background-color: rgb(55, 55, 55);\n    color: rgba(255, 255, 255, 0.83);\n  }\n  button {\n    background-color: rgba(255, 255, 255, 0.1);\n    color: inherit;\n  }\n}\n"}}}},
  {"apiVersion":"manifest.dist.app/v1alpha1","kind":"ApiBinding","metadata":{"name":"session","labels":{"keychain.dist.app/auth-mode":"required"}},"spec":{"apiName":"session.v1alpha1.dist.app","required":true,"auth":{"required":false,"accountTypeId":"profile.v1alpha1.dist.app"}}},
];
