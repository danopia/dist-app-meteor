import type { Entity } from "/imports/entities";
export const AppCatalog: Entity[] = [
  {"apiVersion":"manifest.dist.app/v1alpha1","kind":"Application","metadata":{"name":"app","title":"App Market","description":"Find applications to install.","tags":["poc"]},"spec":{"icon":{"type":"glyph","glyph":{"text":"🏪","backgroundColor":"#bf7a41"}}}},
  {"apiVersion":"manifest.dist.app/v1alpha1","kind":"Activity","metadata":{"name":"main","title":"App Market","ownerReferences":[{"apiVersion":"manifest.dist.app/v1alpha1","kind":"Application","name":"app"}]},"spec":{"intentFilters":[{"action":"app.dist.Main","category":"app.dist.Launcher"}],"windowSizing":{"initialWidth":800,"initialHeight":500},"implementation":{"type":"iframe","securityPolicy":{"scriptSrc":["https://unpkg.com"],"imgSrc":["*","data:"]},"sandboxing":["allow-scripts"],"source":{"type":"piecemeal","htmlLang":"en","metaCharset":"utf-8","headTitle":"dist.app instance","inlineScript":"import { createApp, reactive, watchEffect } from \"https://unpkg.com/vue@3.2.37/dist/vue.esm-browser.js\";\nconst distApp = await DistApp.connect();\n\"useVueState\";\nconst state = await useVueState('state', {\n    selectedApp: null\n});\nconst app = createApp({\n    data: ()=>({\n            loading: false,\n            listings: [],\n            profiles: [],\n            state: state()\n        }),\n    created () {\n        this.loadListings().then(()=>distApp.reportReady());\n    },\n    methods: {\n        async loadListings () {\n            this.loading = true;\n            const { listings , profiles  } = await distApp.fetch('/ApiBinding/host/list-available-apps').then((x)=>x.json());\n            this.listings = listings;\n            this.profiles = profiles;\n            this.loading = false;\n        },\n        selectedAppHasInstallations (profileNamespace) {\n            var _this_state_selectedApp;\n            // console.log({currentInstallations: this.state.selectedApp?.currentInstallations})\n            return (_this_state_selectedApp = this.state.selectedApp) === null || _this_state_selectedApp === void 0 ? void 0 : _this_state_selectedApp.currentInstallations.some((x)=>x.profileNamespace == profileNamespace);\n        // currentInstallations: [{\n        //   profileNamespace: 'profile:guest',\n        //   appInstallName: `bundledguestapp-${id}`,\n        // }],\n        },\n        openApp (profileNamespace) {\n            var _this_state_selectedApp;\n            const firstInstall = (_this_state_selectedApp = this.state.selectedApp) === null || _this_state_selectedApp === void 0 ? void 0 : _this_state_selectedApp.currentInstallations.find((x)=>x.profileNamespace == profileNamespace);\n            if (!firstInstall) throw new Error(`BUG: no firstInstall found`);\n            distApp.launchIntent({\n                receiverRef: `entity://${firstInstall.profileNamespace}/profile.dist.app@v1alpha1/AppInstallation/${firstInstall.appInstallName}`,\n                action: 'app.dist.Main',\n                category: 'app.dist.Launcher'\n            });\n        },\n        installApp (profileNamespace) {\n            distApp.launchIntent({\n                dataRef: this.state.selectedApp.url,\n                action: 'app.dist.InstallApp',\n                category: 'app.dist.Default',\n                extras: {\n                    'target-profile': profileNamespace\n                }\n            });\n        }\n    }\n});\napp.mount('body');\n\n\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,IntcInZlcnNpb25cIjozLFwic291cmNlc1wiOltdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJcIixcImZpbGVcIjpcInN0ZG91dFwifSI=","bodyHtml":"<div v-if=\"!state.selectedApp\" id=\"history-col\">\n  <section class=\"intro\">\n    <ul>\n      <li>this market lists several known applications which you can install.</li>\n      <li>some applications will ask for configuration or credentials.</li>\n      <li>also keep in mind that this whole thing is currently in Alpha.</li>\n    </ul>\n  </section>\n  <section v-if=\"!state.selectedApp\" class=\"listing-row\" v-for=\"entry in listings\">\n    <img :src=\"entry.iconUrl\" class=\"app-icon\" />\n    <div class=\"text-area\">\n      <h3>{{ entry.title }}</h3>\n      <p>{{ entry.description }}</p>\n    </div>\n    <button type=\"button\" @click=\"state.selectedApp = entry\">View</button>\n  </section>\n  <section class=\"footer\">\n    <div>\n      and that's it for now\n    </div>\n  </section>\n</div>\n<div v-if=\"state.selectedApp\" class=\"detail-page\">\n  <section class=\"intro\">\n    <ul>\n      <li><button type=\"button\" @click=\"state.selectedApp = null\">Back to directory</button></li>\n    </ul>\n  </section>\n  <section class=\"listing-row\">\n    <img :src=\"state.selectedApp.iconUrl\" class=\"app-icon\" />\n    <div class=\"text-area\">\n      <h3>{{ state.selectedApp.title }}</h3>\n      <p>{{ state.selectedApp.description }}</p>\n    </div>\n    <template v-for=\"profile in profiles\">\n      <div style=\"grid-column: 2 / 5;\"><hr></div>\n      <div class=\"text-area\" style=\"grid-column: 2 / 3;\">\n        <h3>{{ profile.title }}</h3>\n        <p>{{ profile.namespace }}</p>\n      </div>\n      <template v-if=\"selectedAppHasInstallations(profile.namespace)\">\n        <button type=\"button\" style=\"grid-column: 3 / 4;\" @click=\"openApp(profile.namespace)\">Open</button>\n        <button type=\"button\" style=\"grid-column: 4 / 5;\">v</button>\n      </template>\n      <button v-else type=\"button\" style=\"grid-column: 3 / 5;\" @click=\"installApp(profile.namespace)\">Install</button>\n    </template>\n  </section>\n</div>\n","inlineStyle":".listing-row {\n  display: grid;\n  grid-template-columns: 8em 1fr 8em;\n  gap: 1em;\n}\n.app-icon {\n  width: 100%;\n  background-color: #ccc;\n  border-radius: 10px;\n  box-shadow: 2px 4px 8px 2px rgba(0,0,0,0.1);\n}\n.listing-row:hover .app-icon,\n.detail-page .app-icon {\n  background-color: #fff;\n}\n\nbody {\n  background-color: #fff;\n  color: #111;\n  margin: 0;\n  padding: 0 2em 10em;\n  box-sizing: border-box;\n  width: 100%;\n  font-family: monospace;\n}\n@media (prefers-color-scheme: dark) {\n  body {\n    background-color: #333;\n    color: #fff;\n  }\n}\nform {\n  display: grid;\n  grid-template-columns: min-content minmax(8em,1fr) 8em 8em;\n  grid-template-rows: 3em min-content;\n  grid-gap: 1em;\n  grid-auto-rows: 3em;\n  margin: 1em;\n}\ninput, textarea, select, button {\n  box-sizing: border-box;\n  font-family: inherit;\n  padding: 0.3em 0.5em;\n  border: 1px solid #999;\n}\ninput, textarea, select {\n  background-color: #eee;\n  color: #000;\n  font-size: 1em;\n  /*overflow-y: hidden;*/\n}\ninput[readonly], textarea[readonly] {\n  border-width: 0;\n  background-color: #ccc;\n  color: #000;\n}\nbutton {\n  background-color: #ddd;\n  color: #000;\n  cursor: pointer;\n}\nbutton:hover, button:focus {\n  border: 1px solid #444;\n  background-color: #bbb;\n}\n@media (prefers-color-scheme: dark) {\n  input, textarea, select {\n    background-color: #222;\n    color: #fff;\n  }\n  input[readonly], textarea[readonly] {\n    background-color: #555;\n    color: #fff;\n  }\n  button {\n    background-color: #444;\n    color: #fff;\n  }\n  button:hover, button:focus {\n    border-color: #ccc;\n    background-color: #666;\n  }\n}\nbutton.primary {\n  font-size: 1.2em;\n}\nbutton.square {\n  aspect-ratio: 1;\n}\nsection {\n  font-size: 1em;\n  margin: 0.8em;\n  padding: 1em;\n  background-color: rgba(200, 200, 200, 0.3);\n}\n.entry details {\n  margin: 0.3em 0;\n}\n@media (max-width: 800px) {\n  body {\n    padding: 0 0 10em;\n  }\n  section {\n    margin: 0.8em 0;\n  }\n  section.entry {\n    padding-left: 0;\n    padding-right: 0;\n    /* text-align: center; */\n  }\n  .entry-head {\n    padding: 0.5em;\n  }\n  progress {\n    margin-bottom: 1em;\n  }\n}\nh3 {\n  margin: 0.2em 0 0.4em;\n}\nh3:not(:first-child) {\n  padding-top: 1.2em;\n}\na.deeplink {\n  margin-right: 0.4em;\n}\nh4 {\n  display: inline;\n  margin: 0em 0 0.2em;\n}\nsection.entry textarea {\n  width: 100%;\n  resize: vertical;\n  vertical-align: bottom;\n  padding: 0.3em 1em;\n}\n.error-msg {\n  color: #f33 !important;\n}\na {\n  color: #ccc;\n}\nsection.intro {\n  padding: 0.5em 1em;\n  background: none;\n}\nsection.intro ul {\n  padding: 0 0.5em;\n  list-style: none;\n}\n.entry-body {\n  margin: 0 1em;\n}\nsection.footer {\n  background-color: rgba(200, 200, 200, 0.15);\n  color: rgba(200, 200, 200, 0.5);\n}\nsection.footer a {\n  color: rgba(200, 200, 200, 0.8);\n}\n"}}}},
  {"apiVersion":"manifest.dist.app/v1alpha1","kind":"ApiBinding","metadata":{"name":"host"},"spec":{"apiName":"market.v1alpha1.dist.app","required":true,"auth":{"required":false,"accountTypeId":"profile.v1alpha1.dist.app"}}},
];
